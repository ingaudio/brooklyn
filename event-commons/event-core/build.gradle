plugins { id 'org.springframework.boot' version '1.5.3.RELEASE' }

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

ext {
	env = (project.hasProperty('env') ? "${env}" : "dev")
}

war { 
	baseName = 'enjoy-core'
}

repositories { mavenCentral() }

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.springframework.boot:spring-boot-devtools")
	compile("org.springframework.boot:spring-boot-starter-web") { exclude module: "spring-boot-starter-tomcat" }
	compile("org.springframework.boot:spring-boot-starter-jetty")
	compile("org.springframework.boot:spring-boot-starter-actuator")

	compile("org.springframework.boot:spring-boot-starter-data-mongodb")
	compile("org.springframework.data:spring-data-solr")

	compile("org.springframework:springloaded")

	compile("com.google.api-client:google-api-client:1.22.0")
	compile("com.google.code.gson:gson:2.3.1")
	compile('com.google.maps:google-maps-services:0.1.20')
	compile('commons-beanutils:commons-beanutils:1.9.2')

	testCompile("junit:junit")

	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}

task updateProfile() {
	doLast { 
		println("Using profile: ${env}")
		System.setProperty("spring.profiles.active", "${env}")
	}
}

task cleanPublic() {
	doLast { delete "${projectDir}/src/main/resources/public" }
}

task copyPublic(type: Copy, dependsOn:['cleanPublic', ':event-web:build']) {
	from '../event-web/dist'
	into 'src/main/resources/public'
}

clean.dependsOn('cleanPublic')

compileJava.dependsOn('updateProfile')

war.dependsOn('copyPublic')




