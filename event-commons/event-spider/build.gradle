
version="0.1.0"

ext {
	virtualEnv = "venv"
}
apply plugin: 'eclipse'

task cleanRaw() {
	doLast {
		delete "${projectDir}/data/raw"
	}
}

task cleanStage() {
	doLast {
		delete "${projectDir}/data/stage"
	}
}

task cleanLive() {
	doLast {
		delete "${projectDir}/data/live"
	}
}

task clean() {
	doLast {
		delete "${projectDir}/data"
		delete "${projectDir}/log"
	}
}

task cleanAll(dependsOn: ['clean']) {
	doLast {
		delete "${projectDir}/build"
	}
}


task createVirtualEnv() {
	doLast {
		if(!file("$buildDir/$virtualEnv/bin/python").exists()) {
			file("$buildDir").mkdirs()
			project.exec { ExecSpec e ->
				e.workingDir=buildDir
				e.commandLine='virtualenv'
				e.args = [virtualEnv]
			}
		}
	}
}

task virtualEnv(dependsOn: [ 'createVirtualEnv']) {
	doLast {
		project.exec { ExecSpec e ->
			e.workingDir="build/venv/bin"
			e.commandLine='./pip'
			e.args = ['install', 'scrapy', 'pysolr', 'googlemaps', 'unidecode']
		}
	}
}

task spiderBcn(dependsOn: [ 'virtualEnv']) {
	doLast {		
		project.exec { ExecSpec e ->
			e.workingDir="src/python"
			e.environment PATH:file('build/venv/bin/').absolutePath 
			e.commandLine='python'
			e.args = ['crawler/spiderBcn.py']
		}
	}
}

task crawlerRaw(dependsOn: [ 'virtualEnv']) {
	doLast {
		project.exec { ExecSpec e ->
			e.workingDir="src/python"
			e.environment PATH:file('build/venv/bin/').absolutePath
			e.commandLine='python'
			e.args = ['crawler/crawlerRaw.py']
		}
	}
}

task crawlerSync(dependsOn: [ 'virtualEnv']) {
	doLast {
		project.exec { ExecSpec e ->
			e.workingDir="src/python"
			e.environment PATH:file('build/venv/bin/').absolutePath
			e.commandLine='python'
			e.args = ['crawler/crawlerSync.py']
		}
	}
}

task crawlerGeo(dependsOn: [ 'virtualEnv']) {
	doLast {
		project.exec { ExecSpec e ->
			e.workingDir="src/python"
			e.environment PATH:file('build/venv/bin/').absolutePath
			e.commandLine='python'
			e.args = ['crawler/crawlerGeo.py']
		}
	}
}





